
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class move : Luban.BeanBase
{
    public move(JSONNode _buf) 
    {
        { if(!_buf["moveId"].IsNumber) { throw new SerializationException(); }  MoveId = _buf["moveId"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["move_Type"].IsNumber) { throw new SerializationException(); }  MoveType = _buf["move_Type"]; }
        { if(!_buf["image"].IsString) { throw new SerializationException(); }  Image = _buf["image"]; }
        { if(!_buf["cost"].IsNumber) { throw new SerializationException(); }  Cost = _buf["cost"]; }
        { if(!_buf["quality"].IsNumber) { throw new SerializationException(); }  Quality = _buf["quality"]; }
        { if(!_buf["moveTips"].IsString) { throw new SerializationException(); }  MoveTips = _buf["moveTips"]; }
        { if(!_buf["catch_Rate"].IsNumber) { throw new SerializationException(); }  CatchRate = _buf["catch_Rate"]; }
        { if(!_buf["move_Target"].IsNumber) { throw new SerializationException(); }  MoveTarget = _buf["move_Target"]; }
        { if(!_buf["power"].IsNumber) { throw new SerializationException(); }  Power = _buf["power"]; }
        { var __json0 = _buf["frequency"]; if(!__json0.IsArray) { throw new SerializationException(); } Frequency = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Frequency.Add(__v0); }   }
        { if(!_buf["shield"].IsNumber) { throw new SerializationException(); }  Shield = _buf["shield"]; }
        { if(!_buf["accuracy"].IsNumber) { throw new SerializationException(); }  Accuracy = _buf["accuracy"]; }
        { if(!_buf["condition"].IsNumber) { throw new SerializationException(); }  Condition = _buf["condition"]; }
        { if(!_buf["effects"].IsString) { throw new SerializationException(); }  Effects = _buf["effects"]; }
        { if(!_buf["draw"].IsString) { throw new SerializationException(); }  Draw = _buf["draw"]; }
        { if(!_buf["points"].IsNumber) { throw new SerializationException(); }  Points = _buf["points"]; }
    }

    public static move Deserializemove(JSONNode _buf)
    {
        return new move(_buf);
    }

    /// <summary>
    /// 技能id
    /// </summary>
    public readonly int MoveId;
    /// <summary>
    /// 技能名字
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 分类
    /// </summary>
    public readonly int MoveType;
    /// <summary>
    /// 卡面图片
    /// </summary>
    public readonly string Image;
    /// <summary>
    /// 费用
    /// </summary>
    public readonly int Cost;
    /// <summary>
    /// 品质
    /// </summary>
    public readonly int Quality;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string MoveTips;
    /// <summary>
    /// 捕获率
    /// </summary>
    public readonly float CatchRate;
    /// <summary>
    /// 技能目标
    /// </summary>
    public readonly int MoveTarget;
    /// <summary>
    /// 威力
    /// </summary>
    public readonly int Power;
    /// <summary>
    /// 造成伤害次数
    /// </summary>
    public readonly System.Collections.Generic.List<int> Frequency;
    /// <summary>
    /// 护盾
    /// </summary>
    public readonly int Shield;
    /// <summary>
    /// 命中率
    /// </summary>
    public readonly int Accuracy;
    /// <summary>
    /// 异常状态
    /// </summary>
    public readonly int Condition;
    /// <summary>
    /// 属性变化
    /// </summary>
    public readonly string Effects;
    /// <summary>
    /// 抽牌
    /// </summary>
    public readonly string Draw;
    /// <summary>
    /// 增加能量行动点
    /// </summary>
    public readonly int Points;
   
    public const int __ID__ = 3357649;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "moveId:" + MoveId + ","
        + "name:" + Name + ","
        + "moveType:" + MoveType + ","
        + "image:" + Image + ","
        + "cost:" + Cost + ","
        + "quality:" + Quality + ","
        + "moveTips:" + MoveTips + ","
        + "catchRate:" + CatchRate + ","
        + "moveTarget:" + MoveTarget + ","
        + "power:" + Power + ","
        + "frequency:" + Luban.StringUtil.CollectionToString(Frequency) + ","
        + "shield:" + Shield + ","
        + "accuracy:" + Accuracy + ","
        + "condition:" + Condition + ","
        + "effects:" + Effects + ","
        + "draw:" + Draw + ","
        + "points:" + Points + ","
        + "}";
    }
}
}

